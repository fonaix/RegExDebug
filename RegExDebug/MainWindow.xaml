<Window x:Class="RegExDebug.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RegExDebug"        
        xmlns:vm="clr-namespace:RegExDebug.ViewModel"
        xmlns:cvr="clr-namespace:RegExDebug.converter"
        xmlns:cus="clr-namespace:RegExDebug.customs"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="RegEx Debug" Height="600" Width="900">
    <Window.Resources>
        <vm:MainViewModel x:Key="vm_main"/>
        <cvr:Boolean2VisibilityConverter x:Key="bool2visibility"/>
        <cvr:Bool2VisibilityDeconverter x:Key="bool2visibilityde"/>
        <cvr:Boolean2ColumnSpanConverter x:Key="bool2columnspan"/>
    </Window.Resources>
    <DockPanel LastChildFill="True" DataContext="{Binding Source={StaticResource vm_main}}" FocusManager.IsFocusScope="True">
        <Menu DockPanel.Dock="Top" ToolBarTray.IsLocked="True">
            <MenuItem ToolTip="{DynamicResource mi_debug}" Tag="/Resources/bug.png" Style="{StaticResource mi_only_img}"
                      Command="{Binding DebugCommand}"
                      />
            <Separator Style="{StaticResource VerticalSeparatorStyle}"/>
            <MenuItem Header="{DynamicResource mi_match}" IsChecked="{Binding Is_match_mode}" IsCheckable="True"/>
            <MenuItem Name="mi_replace" Header="{DynamicResource mi_replace}" IsChecked="{Binding Is_replace_mode}" IsCheckable="True"/>
            <Separator Style="{StaticResource VerticalSeparatorStyle}"/>
            <MenuItem IsChecked="{Binding ROF_IgnoreCase}" ToolTip="{DynamicResource mi_igonre_case}" Tag="/Resources/edit-uppercase.png" IsCheckable="True" Style="{StaticResource mi_only_img}"/>
            <MenuItem IsChecked="{Binding ROF_Multiline}" ToolTip="{DynamicResource mi_multiline}" Tag="/Resources/edit-lipsum.png" IsCheckable="True" Style="{StaticResource mi_only_img}"/>
            <MenuItem IsChecked="{Binding ROF_Singleline}" ToolTip="{DynamicResource mi_singleline}" Tag="/Resources/edit-hyphenation.png" IsCheckable="True" Style="{StaticResource mi_only_img}"/>
            <MenuItem IsChecked="{Binding ROF_ExplicitCapture}" ToolTip="{DynamicResource mi_group}" Tag="/Resources/edit-code-division.png" IsCheckable="True" Style="{StaticResource mi_only_img}"/>
            <MenuItem IsChecked="{Binding ROF_IgnorePatternWhitespace}" ToolTip="{DynamicResource mi_space}" Tag="/Resources/edit-space.png" IsCheckable="True" Style="{StaticResource mi_only_img}"/>
            <MenuItem IsChecked="{Binding ROF_ECMAScript}" ToolTip="{DynamicResource mi_script}" Tag="/Resources/script-code.png" IsCheckable="True" Style="{StaticResource mi_only_img}"/>
            <MenuItem IsChecked="{Binding ROF_CultureInvariant}" ToolTip="{DynamicResource mi_culture}" Tag="/Resources/edit-language.png" IsCheckable="True" Style="{StaticResource mi_only_img}"/>
            <MenuItem IsChecked="{Binding ROF_RightToLeft}" ToolTip="{DynamicResource mi_right}" Tag="/Resources/arrow-return-000-left.png" IsCheckable="True" Style="{StaticResource mi_only_img}"/>
            <Separator Style="{StaticResource VerticalSeparatorStyle}"/>
            <MenuItem Header="{DynamicResource mi_language}" Tag="/Resources/language-balloon.png"  Style="{StaticResource mi_img_text}">
                <MenuItem Header="中文" Command="{Binding ChangeLanguageCommand}" CommandParameter="zh_CN"/>
                <MenuItem Header="English" Command="{Binding ChangeLanguageCommand}" CommandParameter="en_US"/>
            </MenuItem>
            <MenuItem Header="{DynamicResource mi_about}" Tag="/Resources/information.png"  Style="{StaticResource mi_img_text}" Command="{Binding AboutCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"/>
        </Menu>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height=".4*"/>
                <RowDefinition Height="3"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="3"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <GroupBox Header="{DynamicResource gp_regex_title}"                           
                          Grid.ColumnSpan="{Binding Converter={StaticResource bool2columnspan},ElementName=mi_replace,Path=IsChecked}"
                          >
                    <DockPanel>
                        <ScrollViewer x:Name="sv_regex_lbl" DockPanel.Dock="Left" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                            <Label Content="{Binding Regex_line}" Style="{StaticResource lbl_textline}" Padding="5,0" MinWidth="20"/>
                        </ScrollViewer>
                        <Label DockPanel.Dock="Bottom" Content="{Binding Exception_tip}" Foreground="{StaticResource SCB_LIGHTRED}"/>
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" 
                                      cus:ScrollExtension.VScrollChanged="{Binding ScrollChangedCommand}"
                                      cus:ScrollExtension.VScrollTarget="{Binding ElementName=sv_regex_lbl}">
                            <TextBox x:Name="regex_content"                                     
                                     SelectionBrush="DarkOrange"
                                     cus:TextBoxExtension.SelectedText="{Binding Regex_select_content,UpdateSourceTrigger=PropertyChanged}"
                                     AcceptsReturn="True" IsInactiveSelectionHighlightEnabled="True"
                                     Text="{Binding Regex_content,UpdateSourceTrigger=PropertyChanged}"/>
                        </ScrollViewer>

                    </DockPanel>
                </GroupBox>
                <GridSplitter Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{StaticResource SCB_GRAY}"
                              Visibility="{Binding Converter={StaticResource bool2visibility},ElementName=mi_replace,Path=IsChecked}"/>
                <GroupBox Header="{DynamicResource gp_replace_title}"  Grid.Column="2" Visibility="{Binding Converter={StaticResource bool2visibility},ElementName=mi_replace,Path=IsChecked}">

                    <DockPanel>
                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden" x:Name="sv_replace_lbl" DockPanel.Dock="Left">
                            <Label Content="{Binding Replace_line}" Padding="5,0" MinWidth="20"  Style="{StaticResource lbl_textline}"/>
                        </ScrollViewer>
                        <ScrollViewer HorizontalScrollBarVisibility="Auto"
                                      cus:ScrollExtension.VScrollChanged="{Binding ScrollChangedCommand}"
                                      cus:ScrollExtension.VScrollTarget="{Binding ElementName=sv_replace_lbl}">
                            <TextBox AcceptsReturn="True"
                                     Text="{Binding Replace_content,UpdateSourceTrigger=PropertyChanged}" />
                        </ScrollViewer>
                    </DockPanel>
                </GroupBox>
            </Grid>
            <GridSplitter Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{StaticResource SCB_GRAY}"/>
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="3"/>
                    <ColumnDefinition Width=".6*"/>
                </Grid.ColumnDefinitions>
                <GroupBox>
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="{DynamicResource gp_source_title}" Padding="2,0"/>
                            <Label Content="[" Padding="0"/>
                            <Label Content="{Binding Source_content.Length}" Padding="2,0"/>
                            <Label Content="{DynamicResource gp_source_words}" Padding="0"/>
                            <Label Content="]" Padding="0"/>
                        </StackPanel>
                    </GroupBox.Header>

                    <DockPanel>
                        <ScrollViewer x:Name="sv_source_lbl" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                            <Label Content="{Binding Source_line}" Padding="5,0" MinWidth="20" DockPanel.Dock="Left" Style="{StaticResource lbl_textline}"/>
                        </ScrollViewer>
                        <ScrollViewer HorizontalScrollBarVisibility="Auto"          
                                      cus:ScrollExtension.VScrollChanged="{Binding ScrollChangedCommand}"
                                      cus:ScrollExtension.VScrollTarget="{Binding ElementName=sv_source_lbl}"
                                      Padding="0,0,5,5"
                                  >
                            <TextBox AcceptsReturn="True" 
                                     cus:TextBoxExtension.SelectionStart="{Binding Source_sel_start}"
                                     cus:TextBoxExtension.SelectionLength="{Binding Source_sel_len}"
                                     SelectionBrush="DarkOrange"
                                     IsInactiveSelectionHighlightEnabled="True"   
                                     Text="{Binding Source_content,UpdateSourceTrigger=PropertyChanged}" />
                        </ScrollViewer>
                    </DockPanel>
                </GroupBox>
                <GridSplitter Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{StaticResource SCB_GRAY}"/>
                <GroupBox Grid.Column="2">
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="{DynamicResource gp_result_title}" Padding="2,0"/>
                            <Label Content="[" Padding="0"/>
                            <Label Content="{Binding ResultCollection.Rows.Count}" Padding="2,0" Visibility="{Binding Converter={StaticResource bool2visibilityde},ElementName=mi_replace,Path=IsChecked}"/>
                            <Label Content="{DynamicResource gp_result_items}" Padding="0" Visibility="{Binding Converter={StaticResource bool2visibilityde},ElementName=mi_replace,Path=IsChecked}"/>
                            <Label Content="{Binding Result_content.Length}" Padding="2,0" Visibility="{Binding Converter={StaticResource bool2visibility},ElementName=mi_replace,Path=IsChecked}"/>
                            <Label Content="{DynamicResource gp_source_words}" Padding="0" Visibility="{Binding Converter={StaticResource bool2visibility},ElementName=mi_replace,Path=IsChecked}"/>
                            <Label Content="，" Padding="0"/>
                            <Label Content="{Binding ElapsedTime}" Padding="2,0"/>
                            <Label Content="{DynamicResource gp_result_time_unit}" Padding="0"/>
                            <Label Content="]" Padding="0"/>
                        </StackPanel>
                    </GroupBox.Header>
                    <Grid>
                        <DataGrid ItemsSource="{Binding ResultCollection}"
                          Visibility="{Binding Converter={StaticResource bool2visibilityde},ElementName=mi_replace,Path=IsChecked}"
                              AutoGenerateColumns="True"
                              BorderThickness="0"
                              AlternationCount="2"
                              SelectionMode="Single"
                              SelectionUnit="Cell"
                              IsReadOnly="True"
                              CurrentCell="{Binding SelectedMatch,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <DataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="{DynamicResource gp_result_cm_copy}" InputGestureText="Ctrl+C" Style="{StaticResource mi_img_text}" Tag="/Resources/document-copy.png" Command="{Binding CopyCommand}"/>
                                    <Separator Style="{ StaticResource HorizontalSeparatorStyle}"/>
                                    <MenuItem Header="{DynamicResource gp_result_cm_export}" Style="{StaticResource mi_img_text}" Tag="/Resources/document-excel-csv.png" Command="{Binding ExportCsvCommand}"/>
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                        </DataGrid>
                        <DockPanel Visibility="{Binding Converter={StaticResource bool2visibility},ElementName=mi_replace,Path=IsChecked}" >
                            <ScrollViewer x:Name="sv_result_lbl" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                                <Label Content="{Binding Result_line}" Padding="5,0" MinWidth="20" DockPanel.Dock="Left" Style="{StaticResource lbl_textline}"/>
                            </ScrollViewer>
                            <ScrollViewer HorizontalScrollBarVisibility="Auto"          
                                     cus:ScrollExtension.VScrollChanged="{Binding ScrollChangedCommand}"
                                          cus:ScrollExtension.VScrollTarget="{Binding ElementName=sv_result_lbl}"
                                      Padding="0,0,5,5"
                                  >
                                <TextBox AcceptsReturn="True" 
                                     SelectionBrush="DarkOrange"
                                     IsInactiveSelectionHighlightEnabled="True"   
                                     Text="{Binding Result_content,UpdateSourceTrigger=PropertyChanged}" />
                            </ScrollViewer>
                        </DockPanel>
                    </Grid>
                </GroupBox>
            </Grid>
        </Grid>
    </DockPanel>
</Window>
